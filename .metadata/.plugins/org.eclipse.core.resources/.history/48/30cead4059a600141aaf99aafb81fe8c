package com.example.assignment1.test;

import java.util.Collection;

import com.example.assignment1.Claim;
import com.example.assignment1.ClaimList;

import junit.framework.TestCase;

public class ClaimListTest extends TestCase {
	public void testEmptyClaimList() {
		ClaimList claimList = new ClaimList();
		Collection<Claim> claim = claimList.getClaim();
		assertTrue("Empty Claim List", claim.size() == 0); //can use == because integer and not object
	}
	public void testAddClaimList() {
		ClaimList claimList = new ClaimList();
		String claimName = "My Claim";
		Claim testClaim = new Claim(claimName);
		claimList.addClaim(testClaim);
		Collection<Claim> claim = claimList.getClaim();
		assertTrue("Empty Claim List", claim.size() == 1); //can use == because integer and not object
		assertTrue("Test Claim Not Contained",claim.contains(testClaim));
	}
	public void testRemoveClaim() {
		ClaimList claimList = new ClaimList();
		String claimName = "My Claim";
		Claim testClaim = new Claim(claimName);
		claimList.addClaim(testClaim);
		Collection<Claim> claim = claimList.getClaim(); //claim variable made here
		assertTrue("Claim List Size Isn't Big Enough", claim.size() == 1); //can use == because integer and not object
		assertTrue("",claim.contains(testClaim));
		ClaimList.removeClaim(testClaim);
		claim = claimList.getClaim(); //overwriting claim variable
		assertTrue("Claim List Size Isn't Small Enough", claim.size() == 1); //can use == because integer and not object
		assertFalse("Test Claim Still Contained",claim.contains(testClaim));
	}
}
