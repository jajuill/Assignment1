/*This is free and unencumbered software released into the public domain.
Anyone is free to copy, modify, publish, use, compile, sell, or
distribute this software, either in source code form or as a compiled
binary, for any purpose, commercial or non-commercial, and by any
means.
In jurisdictions that recognize copyright laws, the author or authors
of this software dedicate any and all copyright interest in the
software to the public domain. We make this dedication for the benefit
of the public at large and to the detriment of our heirs and
successors. We intend this dedication to be an overt act of
relinquishment in perpetuity of all present and future rights to this
software under copyright law.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
For more information, please refer to <http://unlicense.org/>

Code written by Matthew "Skinny" McLeod*/
package com.example.assignment1;

import java.util.ArrayList;

import com.example.assignment1.Item;
public class ItemList {
	
	protected ArrayList<Item> itemList;
	protected ArrayList<Expenses> expenseList;
	public ItemList() {
		itemList = new ArrayList<Item>();
		expenseList = new ArrayList<Expenses>();
	}
	Item tempItem;
	//found from http://www.vogella.com/tutorials/AndroidListView/article.html
	public ArrayList<String> getItemList(){
		final ArrayList<String> listNames = new ArrayList<String>();
		for(int i=0;i<itemList.size();i++){ //how can I have 2 versions of itemList that work in different objects?
			listNames.add((itemList.get(i)).getName());
		}
		return listNames;
	}
	public void changeItemName(String newName, String newDate, String newCurrency, double newCost, String newDescription){//just realized how pointless this is
		changeExpense((itemList.get(itemList.indexOf(tempItem)).getCost())*-1,itemList.get(itemList.indexOf(tempItem)).getCurrency());
		itemList.get(itemList.indexOf(tempItem)).changeName(newName, newDate, newCurrency, newCost, newDescription);//should've just returned the item object
		changeExpense(newCost,newCurrency);
	}
	public void addItem(Item myItem) {
		itemList.add(myItem);
		changeExpense(myItem.getCost(),myItem.getCurrency());
	}

	private void changeExpense(double value, String curr){//need to check expense string
		for(int i=0;i<=expenseList.size();i++){//<=   !!!!!!!!!!!!!!!!!!!
			if (i == expenseList.size()){//then must not have currency yet
				Expenses expense = new Expenses(curr,value);
				expenseList.add(expense);
				break;//heh, have to break otherwise comparison ahead will break everything
			}
			else if (expenseList.get(i).getCurrency().equals(curr)){ 
				expenseList.get(i).changeTotalExpense(value);
				break;
			}
		}
	}
	
	public ArrayList<String> getExpenseList(){
		final ArrayList<String> listNames = new ArrayList<String>();
		for(int i=0;i<expenseList.size();i++){ 
			listNames.add((expenseList.get(i)).getValue());
		}
		return listNames;
	}
	public void removeItem() {
		itemList.remove(tempItem);
	}

	public Item getItem(int index) {
		return itemList.get(index);
	}
	public void setItemChoice(Item o) { //Oject should be Item
		tempItem = o; //returns index value of Item selected
	}

		
}
